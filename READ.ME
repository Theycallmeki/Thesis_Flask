ðŸ›’ Behavioral Analysis & Recommendation System
Project Overview

This project implements a machine learning pipeline to analyze customer purchase behavior and provide item recommendations. The workflow covers data preprocessing, user behavior modeling, machine learning training, and recommendation generation.

The system uses raw sales data (raw_sales.csv) and outputs:

Categorized sales dataset (trained_sales.csv)

Machine learning model (buying_frequency_model.pkl)

Label encoder (label_encoder.pkl)

User behavior summary and top-selling items (behavior_analysis_ml.csv)

1. Data Preparation

Loaded raw_sales.csv.

Automatically categorized items into predefined categories (Fruits, Vegetables, Meat, Dairy, etc.) using keyword matching.

Filled uncategorized items as 'Uncategorized'.

Saved cleaned dataset as trained_sales.csv.

2. User Behavior Analysis

Computed per-user metrics:

Total purchases (count)

Days active (days_active)

Average purchases per week (avg_per_week)

Classified users into frequency categories:

Occasional, Monthly, Weekly, Daily

Saved behavior summary to behavior_analysis_ml.csv.

3. Machine Learning Model

Trained a RandomForestClassifier to predict user purchase frequency based on behavioral features.

Model evaluation:

Accuracy: 100%

Classification report generated

Saved model (buying_frequency_model.pkl) and label encoder (label_encoder.pkl) for later use.

4. Recommendation System

Built a user-item matrix.

Calculated item similarity using cosine similarity.

Generated top 5 similar item recommendations for a sample item.

Sample output:

Sample item: 'canned beer'
Recommendations: ['whole milk', 'other vegetables', 'rolls/buns', 'root vegetables', 'soda']

5. Top-selling Items

Listed the 10 most frequently purchased items:

whole milk
other vegetables
rolls/buns
soda
yogurt
root vegetables
tropical fruit
bottled water
sausage
citrus fruit

Outputs
File	Description
trained_sales.csv	Categorized sales data ready for analysis
behavior_analysis_ml.csv	User behavior summary with frequency labels
buying_frequency_model.pkl	Trained RandomForest model
label_encoder.pkl	Label encoder for frequency labels
Next Steps / Recommendations

Improve recommendations by considering item categories for more realistic suggestions.

Add an interactive recommendation function, allowing users to input any item and get suggestions without rerunning the script.

Evaluate and test the ML model on larger datasets to avoid overfitting (100% accuracy may indicate memorization).

Optional: Deploy as a Flask API to make predictions and recommendations accessible via a web interface.

How to Run

Place raw_sales.csv in the ml/ folder.

Run the script:

python -m ml.analyze_behavior


Check outputs in the ml/ folder.
